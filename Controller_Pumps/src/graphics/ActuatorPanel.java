/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphics;

import common.ActuatorConnectionManager;
import common.ControllerInterface;
import java.awt.GridLayout;
import javax.swing.border.TitledBorder;

/**
 *
 * @author segovia
 */
public class ActuatorPanel extends javax.swing.JPanel {

    ControllerInterface ctl;
    int actuatorId = -1;
    boolean[] pumps = {false, false, false, false}; 
    
    /**
     * Creates new form ActuatorPanel
     */
    public ActuatorPanel() {
        initComponents();
    }
    
    public void setController(ControllerInterface ctl_param){
        ctl= ctl_param;
    }
    
        
    public ActuatorPanel(String title, ControllerInterface controller) {
        initComponents();
        
        this.setVisible(true);
        
        TitledBorder border1 = new TitledBorder(title);
        border1.setTitleJustification(TitledBorder.CENTER);
        border1.setTitlePosition(TitledBorder.TOP);            
        this.setBorder(border1);
        
        ctl = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        interrogation = new javax.swing.JButton();
        sychro = new javax.swing.JButton();
        disconection = new javax.swing.JButton();
        stopServer = new javax.swing.JButton();
        pump1 = new javax.swing.JButton();
        pump2 = new javax.swing.JButton();
        pump3 = new javax.swing.JButton();
        pump4 = new javax.swing.JButton();
        stopPumps = new javax.swing.JButton();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(600, 300));
        setPreferredSize(new java.awt.Dimension(218, 92));
        setLayout(new java.awt.GridLayout(3, 4));

        interrogation.setText("Interrogation");
        interrogation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interrogationActionPerformed(evt);
            }
        });
        add(interrogation);

        sychro.setText("Synchronization");
        sychro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sychroActionPerformed(evt);
            }
        });
        add(sychro);

        disconection.setText("Disconnection");
        disconection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconectionActionPerformed(evt);
            }
        });
        add(disconection);

        stopServer.setText("Stop Server");
        stopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopServerActionPerformed(evt);
            }
        });
        add(stopServer);

        pump1.setText("TANK 2 - Pump 1");
        pump1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pump1ActionPerformed(evt);
            }
        });
        add(pump1);

        pump2.setText("TANK 4 - Pump 2");
        pump2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pump2ActionPerformed(evt);
            }
        });
        add(pump2);

        pump3.setText("TANK 1 - Pump 3");
        pump3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pump3ActionPerformed(evt);
            }
        });
        add(pump3);

        pump4.setText("TANK 3 - Pump 4");
        pump4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pump4ActionPerformed(evt);
            }
        });
        add(pump4);

        stopPumps.setText("Stop All Pumps");
        stopPumps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopPumpsActionPerformed(evt);
            }
        });
        add(stopPumps);
    }// </editor-fold>//GEN-END:initComponents

    private void interrogationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interrogationActionPerformed
        // TODO add your handling code here:
        ctl.sendInterrogationCommand(actuatorId);
    }//GEN-LAST:event_interrogationActionPerformed

    private void sychroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sychroActionPerformed
        // TODO add your handling code here:
        ctl.sendSynchronizeClock(actuatorId);
    }//GEN-LAST:event_sychroActionPerformed

    private void disconectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconectionActionPerformed
        // TODO add your handling code here:
        ctl.sendCloseConnection(actuatorId);
    }//GEN-LAST:event_disconectionActionPerformed

    private void stopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopServerActionPerformed
        // TODO add your handling code here:
        ctl.sendStopServer(actuatorId);
    }//GEN-LAST:event_stopServerActionPerformed

    private void pump1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pump1ActionPerformed
        // TODO add your handling code here:
        pumps[0] = !pumps[0];
       ctl.activatePumps(pumps[0], pumps[1], pumps[2], pumps[3]);
    }//GEN-LAST:event_pump1ActionPerformed

    private void pump2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pump2ActionPerformed
        // TODO add your handling code here:
       pumps[1] = !pumps[1];
       ctl.activatePumps(pumps[0], pumps[1], pumps[2], pumps[3]);
    }//GEN-LAST:event_pump2ActionPerformed

    private void stopPumpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopPumpsActionPerformed
        // TODO add your handling code here:
        pumps[0] = false;
        pumps[1] = false;
        pumps[2] = false;
        pumps[3] = false;
        ctl.activatePumps(pumps[0], pumps[1], pumps[2] , pumps[3]);
    }//GEN-LAST:event_stopPumpsActionPerformed

    private void pump4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pump4ActionPerformed
        // TODO add your handling code here:
        pumps[3] = !pumps[3];
        ctl.activatePumps(pumps[0], pumps[1], pumps[2], pumps[3]);        
    }//GEN-LAST:event_pump4ActionPerformed

    private void pump3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pump3ActionPerformed
        // TODO add your handling code here:
        pumps[2] = !pumps[2];
        ctl.activatePumps(pumps[0], pumps[1], pumps[2], pumps[3]);
    }//GEN-LAST:event_pump3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton disconection;
    private javax.swing.JButton interrogation;
    private javax.swing.JButton pump1;
    private javax.swing.JButton pump2;
    private javax.swing.JButton pump3;
    private javax.swing.JButton pump4;
    private javax.swing.JButton stopPumps;
    private javax.swing.JButton stopServer;
    private javax.swing.JButton sychro;
    // End of variables declaration//GEN-END:variables
}
